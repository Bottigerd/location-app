{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 To use the CoreData branch, simply clone the repo and build the project on Xcode.\
\
When the simulator shows up, the first page displays a map. Click on the green Button at the bottom of the page to access the CoreData database. Once open, there are 5 inputs. Timestamp accepts timestamps using the follow format \cf2 \cb3 "yyyy-MM-dd HH:mm:ss\'94. Latitude, Longitude and Altitude accept doubles. Name accepts a string. Once all boxes have been filled, the \'91add\'92 button adds them to the table. \'91Clear\'92 clears the text boxes. When enough data has been input, the \'91Export CSV\'92 button can be used to export the data to the \'91files\'92 app on iOS. The \'91import CSV\'92 button allows the user to import CSVs into the CoreData database, with all formats the same as the text input version EXCEPT for timestamps, which now follow the format \cf4 "yyyy-MM-dd HH:mm:ss Z\'94. \
\
When entries are added to the database, sliding left on them allows the user to delete each entry individually as well.}